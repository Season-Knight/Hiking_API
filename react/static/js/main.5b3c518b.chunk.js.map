{"version":3,"sources":["components/MyBlog.js","components/Mainpage.js","components/AddModal.js","components/EditModal.js","components/Chart.js","components/SignUp.js","components/Calendar.js","components/MainRouter.js","App.js","serviceWorker.js","index.js","const.js"],"names":["MyBlog","props","MainPage","makeStyles","theme","button","margin","spacing","state","name","initialMessage","userName","password","loggedIn","onClickHandler","bind","onChangeHandler","body","this","fetch","uriBase","api","method","headers","JSON","stringify","then","httpResponse","ok","Error","json","user","console","log","hasOwnProperty","setState","catch","error","event","target","value","className","onChange","Button","variant","color","startIcon","onClick","to","component","RLink","React","Component","StyledRating","withStyles","iconFilled","iconHover","Rating","getModalStyle","top","left","transform","useStyles","paper","position","width","backgroundColor","border","boxShadow","shadows","padding","SimpleModal","classes","useState","modalStyle","open","setOpen","hikeDate","setHikeDate","hikeName","setHikeName","totalMiles","setTotalMiles","elevationGain","setElevationGain","peakElevation","setPeakElevation","hikeRating","setHikeRating","message","setMessage","Tooltip","title","IconButton","aria-label","Modal","aria-labelledby","aria-describedby","onClose","style","type","emptyIcon","icon","size","maxRating","preventDefault","Date","replace","formData","FormData","append","toISOString","HttpRequest","hike","EditModal","handleClose","update","undefined","Object","entries","length","_id","HttpResponse","require","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","order","onRequestSort","rowCount","TableHead","TableRow","map","headCell","TableCell","key","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","root","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","primary","dark","flex","fontFamily","footer","EnhancedTableToolbar","Toolbar","Typography","marginBottom","table","minWidth","clip","height","overflow","EnhancedTable","setOrder","setOrderBy","selected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","hikes","setHikes","dbHikes","setdbHikes","emptyRows","Math","min","refresh","response","row","useEffect","Paper","numSelected","TableContainer","Table","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","toLocaleDateString","Box","mb","borderColor","defaultValue","getLabelText","precision","fontSize","onDeleteClickHandler","colSpan","TableFooter","reduce","total","parseFloat","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","checked","SignUp","fName","setfName","lName","setlName","setUserName","setPassword","placeholder","Calendar","currentDate","setCurrentDate","selectedDate","setSelectedDate","nextMonth","addMonths","prevMonth","subMonths","onDateClick","day","format","days","startDate","startOfWeek","i","push","addDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","formattedDate","cloneDay","isSameMonth","isSameDay","parse","cells","MainRouter","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5b3c518b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction MyBlog(props) {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyBlog;","//example of function\r\nimport React from 'react'\r\nimport './Mainpage.css'\r\nimport {Link as RLink} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {uriBase, api} from '../const';\r\nimport Icon from '@material-ui/core/Icon'\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nexport default class MainPage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: props.initialMessage,\r\n            userName: \"\",\r\n            password: \"\",\r\n            loggedIn: \"The mountains are calling and I must go!\"\r\n        }\r\n        this.onClickHandler = this.onClickHandler.bind(this)\r\n        this.onChangeHandler = this.onChangeHandler.bind(this)\r\n\r\n    }//end of constructor function\r\n    \r\n\r\n\r\n    onClickHandler(){\r\n        let body = {\r\n            userName: this.state.userName,\r\n            password: this.state.password\r\n        }\r\n        fetch(`${uriBase}${api}/users`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)          \r\n        })\r\n        .then(httpResponse => {\r\n            if (!httpResponse.ok){\r\n            throw new Error(\"Unable to Login\")\r\n        }\r\n            return httpResponse.json()\r\n        })\r\n        .then(user => {\r\n            console.log(\"user\")\r\n            if (user.hasOwnProperty(\"fName\")){\r\n                this.setState({loggedIn: \"Woohoo its go time!\"})\r\n            } else {\r\n                this.setState({loggedIn: \"Are you lost?\"})\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    onChangeHandler(event){\r\n        this.setState({[event.target.name]: event.target.value})\r\n        console.log(this.state)\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div>\r\n                <div>\r\n                <h1>{this.state.name}</h1>\r\n                <h2>{this.state.loggedIn}</h2>\r\n                <div className=\"signin\">\r\n                User Name<input onChange={this.onChangeHandler} name=\"userName\" value={this.state.userName}></input><br></br>\r\n                Password<input onChange={this.onChangeHandler} name=\"password\" value={this.state.password}></input><br></br>\r\n                </div>\r\n                </div>\r\n                <div>\r\n                <Button \r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                startIcon={<CheckIcon />}\r\n                onClick={this.onClickHandler} >Log In</Button>\r\n                <Button \r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                startIcon={<EmojiEmotionsIcon />}\r\n                to=\"/signup\"\r\n                component={RLink}\r\n                 >Sign Up</Button>\r\n                <br></br>\r\n                <RLink to=\"/Tracker\">Track Your Hikes Here!</RLink><br></br>\r\n                <RLink to=\"/MyBlog\">My Summit Blog!</RLink><br></br>\r\n                {/* <Link to=\"/Calendar\">Calendar</Link> */}\r\n                \r\n                </div>\r\n            </div>\r\n            //can do onclick as an arrow function however with the this you dont have to call and define it everytime\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport {uriBase,api} from '../const'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport ChangeHistoryOutlinedIcon from '@material-ui/icons/ChangeHistoryOutlined';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\n\r\nconst StyledRating = withStyles({\r\n    iconFilled: {\r\n        color: '#f73322',\r\n    },\r\n    iconHover: {\r\n        color: '#079938',\r\n    },\r\n})(Rating);\r\n\r\nconst customIcons = {\r\n    1: {\r\n        icon: <ChangeHistoryIcon />,\r\n        label: 'Very Easy',\r\n        fontSize: 10,\r\n        color: '#079938'\r\n    },\r\n    2: {\r\n        icon: <ChangeHistoryIcon />,\r\n        label: 'Easy',\r\n        fontSize: 12,\r\n        color: '#079938',\r\n    },\r\n    3: {\r\n        icon: <ChangeHistoryIcon />,\r\n        label: 'Moderate',\r\n        fontSize: 12,\r\n        textColor: 'blue',\r\n    },\r\n    4: {\r\n        icon: <ChangeHistoryIcon />,\r\n        label: 'Moderatly Difficult',\r\n        fontSize: 14,\r\n        color: 'yellow',\r\n    },\r\n    5: {\r\n        icon: <ChangeHistoryIcon />,\r\n        label: 'Very Difficult',\r\n        fontSize: 16,\r\n        color: 'red'\r\n    },\r\n};\r\n\r\nfunction IconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n}\r\n\r\nIconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction CustomizedRatings() {\r\n    return (\r\n        <div>\r\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Custom icon set</Typography>\r\n        <Rating\r\n          name=\"customized-icons\"\r\n          defaultValue={2}\r\n          getLabelText={value => customIcons[value].label}\r\n          IconContainerComponent={IconContainer}\r\n        />\r\n      </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 ;\r\n  const left = 50 ;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    backgroundColor: 'black',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n   const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [hikeDate, setHikeDate] = React.useState(\"\");\r\n  const [hikeName, setHikeName] = React.useState(\"\");\r\n  const [totalMiles, setTotalMiles] = React.useState(\"\");\r\n  const [elevationGain, setElevationGain] = React.useState(\"\");\r\n  const [peakElevation, setPeakElevation] = React.useState(\"\");\r\n  const [hikeRating, setHikeRating] = React.useState(\"\");\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const [value, setValue] = React.useState(2);\r\n  const [hover, setHover] = React.useState(-1);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    switch (event.target.name) {\r\n        case 'hikeDate':\r\n            setHikeDate(event.target.value)\r\n            break\r\n        case 'hikeName':\r\n            setHikeName(event.target.value)  \r\n            break  \r\n        case 'totalMiles':\r\n            setTotalMiles(event.target.value)   \r\n            break\r\n        case 'elevationGain':\r\n            setElevationGain(event.target.value)\r\n            break\r\n        case 'peakElevation':\r\n            setPeakElevation(event.target.value)    \r\n            break\r\n        case 'hikeRating':\r\n            setHikeRating(event.target.value)  \r\n            break  \r\n            default: \r\n    }\r\n}\r\n\r\nconst onSaveHandler = (event) => {\r\n    event.preventDefault()\r\n    console.log(hikeDate)\r\n    console.log(new Date(hikeDate.replace(/-/g, '\\/')))\r\n    let formData = new FormData()\r\n    formData.append(\"hikeDate\", (new Date(hikeDate.replace(/-/g, '\\/'))).toISOString())\r\n    formData.append(\"hikeName\", hikeName)\r\n    formData.append(\"totalMiles\", totalMiles)\r\n    formData.append(\"elevationGain\", elevationGain)\r\n    formData.append(\"peakElevation\", peakElevation)\r\n    formData.append(\"hikeRating\", hikeRating)\r\n      \r\n        fetch(`${uriBase}${api}/hikes`,{\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then(HttpRequest => {\r\n            if(!HttpRequest.ok){\r\n                throw new Error (\"Add Hike Failed\")\r\n            }\r\n                return HttpRequest.json()\r\n        })\r\n        .then(hike => {\r\n            //ToDo Handle User\r\n            setMessage(\"Hike Added!\")\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        setMessage(\"Hike Added!\")\r\n    }\r\n\r\n  const onCancelHandler = () => {\r\n    \r\n    setHikeDate(\"\")\r\n    setHikeName(\"\")\r\n    setTotalMiles(\"\")\r\n    setElevationGain(\"\")\r\n    setPeakElevation(\"\")\r\n    setHikeRating(\"\")\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Tooltip title=\"Add new hike\">\r\n            \r\n            <IconButton aria-label=\"Add new hike\"  onClick={handleOpen}>\r\n              <AddCircleIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h1>Enter your hike information here!</h1>\r\n          <form>\r\n            <div>\r\n            Hike Date<input type= \"date\" onChange={onChangeHandler} name=\"hikeDate\" value={hikeDate}></input><br></br>\r\n            Trail Name<input type= \"text\" onChange={onChangeHandler} name=\"hikeName\" value={hikeName}></input><br></br>\r\n            Total Miles<input type= \"number\"onChange={onChangeHandler} name='totalMiles' value={totalMiles}></input><br></br>\r\n            Elevation Gain<input type=\"number\"onChange={onChangeHandler} name='elevationGain' value={elevationGain}></input><br></br>\r\n            Peak Elevation<input type=\"number\"onChange={onChangeHandler} name='peakElevation' value={peakElevation}></input><br></br>\r\n              Hike Rating <StyledRating \r\n              className=\"hikeRating\" \r\n              emptyIcon={<FavoriteBorderOutlinedIcon color='red' />}\r\n              icon={<FavoriteIcon />} \r\n              size=\"mini\" \r\n              value={hikeRating} \r\n              maxRating={5} \r\n              color='red' />\r\n              \r\n          \r\n            </div>\r\n                \r\n         \r\n        \r\n            \r\n       \r\n            \r\n            <div>\r\n            <button onClick={onSaveHandler}>Save</button><br></br>\r\n            <button onClick={onCancelHandler}>Close</button>\r\n            <h4>{message}</h4>\r\n            </div>\r\n            </form>\r\n            \r\n          <SimpleModal />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { uriBase, api } from '../const'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport objectId from 'bson-objectid'\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 500,\r\n        backgroundColor: 'black',\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function EditModal(props) {\r\n   \r\n    const classes = useStyles();\r\n    // console.log(props.hike)\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n        \r\n    const [hikeDate, setHikeDate] = React.useState(props.hike.hikeDate);\r\n    const [hikeName, setHikeName] = React.useState(props.hike.hikeName);\r\n    const [totalMiles, setTotalMiles] = React.useState(props.hike.totalMiles);\r\n    const [elevationGain, setElevationGain] = React.useState(props.hike.elevationGain);\r\n    const [peakElevation, setPeakElevation] = React.useState(props.hike.peakElevation);\r\n    const [hikeRating, setHikeRating] = React.useState(props.hike.hikeRating);\r\n    const [message, setMessage] = React.useState(\"\");    \r\n\r\n    const onChangeHandler = (event) => {\r\n        switch (event.target.name) {\r\n            case 'hikeDate':\r\n                setHikeDate(event.target.value)\r\n                break\r\n            case 'hikeName':\r\n                setHikeName(event.target.value)  \r\n                break  \r\n            case 'totalMiles':\r\n                setTotalMiles(event.target.value)   \r\n                break\r\n            case 'elevationGain':\r\n                setElevationGain(event.target.value)\r\n                break\r\n            case 'peakElevation':\r\n                setPeakElevation(event.target.value)    \r\n                break\r\n            case 'hikeRating':\r\n                setHikeRating(event.target.value)  \r\n                default: \r\n        }\r\n    }\r\n    \r\n  \r\n\r\n    const onSaveHandler = () => {\r\n        // const id = dbHikes[index]._id\r\n        let update = {}\r\n        \r\n       \r\n\r\n       \r\n            // we are editing, patching\r\n\r\n            if (props.hike.hikeDate !== hikeDate || props.hike.hikeDate === undefined) {\r\n                update.hikeDate = hikeDate\r\n            }\r\n            if (props.hike.hikeName !== hikeName || props.hike.hikeName === undefined) {\r\n                update.hikeName = hikeName\r\n            }\r\n            if (props.hike.totalMiles !== totalMiles || props.hike.totalMiles === undefined) {\r\n                update.totalMiles = totalMiles\r\n            }\r\n            if (props.hike.elevationGain !== elevationGain || props.hike.elevationGain === undefined) {\r\n                update.elevationGain = elevationGain\r\n            }\r\n            if (props.hike.peakElevation !== peakElevation || props.hike.peakElevation === undefined) {\r\n                update.peakElevation = peakElevation\r\n            }\r\n            if (props.hike.hikeRating !== hikeRating || props.hike.hikeRating === undefined) {\r\n                update.hikeRating = hikeRating\r\n            }\r\n        \r\n\r\n        \r\n        //make sure we do not update a blank object\r\n        if (Object.entries(update).length > 0) {\r\n            //patch or put\r\n            fetch(`${uriBase}${api}/hikes/${props.hike._id}`, {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(update)\r\n            })\r\n                .then(HttpResponse => {\r\n                    if (!HttpResponse.ok) {\r\n                        throw new Error(`Coudn't Patch`)\r\n                    }\r\n                    return HttpResponse.json()\r\n                })\r\n                .then(user => {\r\n                    handleClose()\r\n                    // props.refresh()\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n       \r\n\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        \r\n    };\r\n\r\n  \r\n  \r\n\r\n    return (\r\n        <div>\r\n            <IconButton>\r\n                <EditIcon onClick={handleOpen}>Edit</EditIcon>\r\n            </IconButton>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h1>Edit your hike!</h1>\r\n                    <div>\r\n                        Hike Date<input type=\"text\" onChange={onChangeHandler} name=\"hikeDate\" value={hikeDate}></input><br></br>\r\n                        Trail Name<input type=\"text\" onChange={onChangeHandler} name=\"hikeName\" value={hikeName}></input><br></br>\r\n                        Total Miles<input type=\"number\" onChange={onChangeHandler} name='totalMiles' value={totalMiles}></input><br></br>\r\n                        Elevation Gain<input type=\"number\" onChange={onChangeHandler} name='elevationGain' value={elevationGain}></input><br></br>\r\n                        Peak Elevation<input type=\"number\" onChange={onChangeHandler} name='peakElevation' value={peakElevation}></input><br></br>\r\n                        Hike Rating \r\n                    </div>\r\n\r\n                    <div style={{color: 'red'}}>\r\n                        <button onClick={onSaveHandler}>Save</button><br></br>\r\n                        <button onClick={handleClose}>Cancel</button>\r\n                        <h4>{message}</h4>\r\n                    </div>\r\n\r\n\r\n                    \r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddModal from './AddModal'\r\nimport EditModal from './EditModal'\r\nimport { uriBase, api } from '../const'\r\nimport './Mainpage.css'\r\nimport { Link as RLink } from 'react-router-dom'\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nfunction createData(hikeDate, hikeName, totalMiles, elevationGain, peakElevation) {\r\n    return { hikeDate, hikeName, totalMiles, elevationGain, peakElevation };\r\n}\r\nconst StyledRating = withStyles({\r\n    iconFilled: {\r\n        color: '#ff6d75',\r\n    },\r\n    iconHover: {\r\n        color: '#ff3d47',\r\n    },\r\n})(Rating);\r\nconst customIcons = {\r\n    1: {\r\n        icon: <SentimentVeryDissatisfiedIcon />,\r\n        label: 'Very Dissatisfied',\r\n    },\r\n    2: {\r\n        icon: <SentimentDissatisfiedIcon />,\r\n        label: 'Dissatisfied',\r\n    },\r\n    3: {\r\n        icon: <SentimentSatisfiedIcon />,\r\n        label: 'Neutral',\r\n    },\r\n    4: {\r\n        icon: <SentimentSatisfiedAltIcon />,\r\n        label: 'Satisfied',\r\n    },\r\n    5: {\r\n        icon: <SentimentVerySatisfiedIcon />,\r\n        label: 'Very Satisfied',\r\n    },\r\n};\r\n\r\nfunction IconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n}\r\n\r\nIconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction CustomizedRatings() {\r\n    return (\r\n        <div>\r\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                <Typography component=\"legend\">Custom icon and color</Typography>\r\n                <StyledRating\r\n                    name=\"customized-color\"\r\n                    defaultValue={2}\r\n                    getLabelText={value => `${value} Heart${value !== 1 ? 's' : ''}`}\r\n                    precision={0.5}\r\n                    icon={<FavoriteIcon fontSize=\"inherit\" />}\r\n                />\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData('January 10, 2020','Mulans Peak', 4.7, 2000, 8800,),\r\n//   createData('April 17, 2019', 'Granduer Peak', 6.5, 4000, 9700),\r\n//   createData('May 23, 2019', 'Elephant Rock', 8, 1700, 8100),\r\n\r\n// ];\r\n\r\n\r\nfunction db2tablerows(dbArray) {\r\n    return (dbArray.map((row) => {\r\n        return ({\r\n            hikeDate: new Date(row.hikeDate),\r\n            hikeName: row.hikeName,\r\n            totalMiles: row.totalMiles,\r\n            elevationGain: row.elevationGain,\r\n            peakElevation: row.peakElevation,\r\n            hikeRating: row.hikeRating\r\n        })\r\n    })\r\n    )\r\n}\r\nconst moment = require('moment')\r\n// const formattedDate=moment(newDate).format(MM-DD-YYYY)\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'hikeDate', numeric: true, disablePadding: false, label: 'Date' },\r\n    { id: 'hikeName', numeric: true, disablePadding: false, label: 'Trail Name' },\r\n    { id: 'totalMiles', numeric: true, disablePadding: false, label: 'Total Miles' },\r\n    { id: 'elevationGain', numeric: true, disablePadding: false, label: 'Elevation Gained' },\r\n    { id: 'peakElevation', numeric: true, disablePadding: false, label: 'Peak Elevation' },\r\n    { id: 'hikeRating', numeric: true, disablePadding: false, label: 'Hike Rating' },\r\n\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, rowCount, onRequestSort } = props;\r\n    const createSortHandler = property => event => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <TableHead className=\"table\">\r\n            <TableRow>\r\n                {/* <TableCell padding=\"checkbox\">      \r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all hikes' }}\r\n          />\r\n        </TableCell> */}\r\n                {headCells.map(headCell => (\r\n                    <TableCell\r\n\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n\r\n    onRequestSort: PropTypes.func.isRequired,\r\n\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        fontFamily: 'Lobster'\r\n    },\r\n    footer: {\r\n        fontFamily: 'Lobster',\r\n\r\n    }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n    const classes = useToolbarStyles();\r\n    return (\r\n        <Toolbar>\r\n\r\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\"\r\n                fontFamily='Lobster'>\r\n                Hike Tracker\r\n        </Typography>\r\n\r\n            <AddModal ></AddModal>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function EnhancedTable() {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('miles');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [hikes, setHikes] = React.useState([]);\r\n    const [dbHikes, setdbHikes] = React.useState([])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = event => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, hikes.length - page * rowsPerPage);\r\n\r\n    const onDeleteClickHandler = (event, index) => {\r\n        const id = dbHikes[index]._id\r\n        fetch(`${uriBase}${api}/hikes/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(HttpResponse => {\r\n                if (!HttpResponse.ok) {\r\n                    throw new Error(\"Delete Failed\")\r\n                }\r\n                return HttpResponse.json()\r\n            })\r\n            .then(response => {\r\n                refresh()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const refresh = () => {\r\n\r\n        fetch(`${uriBase}${api}/hikes`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(HttpResponse => {\r\n                if (!HttpResponse.ok) {\r\n                    throw new Error(\"Bad Response\")\r\n                }\r\n                return HttpResponse.json()\r\n            })\r\n            .then(response => {\r\n                console.log(response)\r\n                setdbHikes(response)\r\n                setHikes(db2tablerows(response))\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    React.useEffect(() => {\r\n        refresh()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>The VIEW <br></br>is always worth <br></br>the CLIMB!!</h1>\r\n\r\n            <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} />\r\n                    <TableContainer>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={dense ? 'small' : 'medium'}\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <EnhancedTableHead\r\n                                classes={classes}\r\n                                numSelected={selected.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                //   onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={hikes.length}\r\n\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(hikes, getComparator(order, orderBy))\r\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    .map((row, index) => {\r\n\r\n                                        //   const isItemSelected = isSelected(row.hikeDate);\r\n                                        //   const labelId = `enhanced-table-checkbox-${index}`;\r\n                                        console.log({index})\r\n                                        console.log({row})\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                                //   hover\r\n                                                //   onClick={event => handleClick(event, row.hikeDate)}\r\n                                                //   role=\"checkbox\"\r\n                                                //   aria-checked={isItemSelected}\r\n                                                //   tabIndex={-1}\r\n                                                key={index}\r\n                                            //   selected={isItemSelected}\r\n                                            >\r\n                                                {/* <TableCell > */}\r\n                                                {/* <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        /> */}\r\n                                                {/* </TableCell> */}\r\n                                                {/* <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.hikeDate}\r\n                      </TableCell> */}\r\n\r\n                                                <TableCell align=\"left\">{row.hikeDate.toLocaleDateString(\"en-US\")}</TableCell>\r\n                                                <TableCell align=\"right\">{row.hikeName}</TableCell>\r\n                                                <TableCell align=\"right\">{row.totalMiles}</TableCell>\r\n                                                <TableCell align=\"right\">{row.elevationGain}</TableCell>\r\n                                                <TableCell align=\"right\">{row.peakElevation}</TableCell>\r\n                                                <TableCell align=\"right\">{row.hikeRating}\r\n                                                    <Box component=\"fieldset\" mb={\"\"} borderColor=\"transparent\">\r\n                                                        <Typography component=\"legend\"></Typography>\r\n                                                        <StyledRating\r\n                                                            name=\"customized-color\"\r\n                                                            defaultValue={0}\r\n                                                            getLabelText={value => `${value} Heart${value !== 1 ? 's' : ''}`}\r\n                                                            precision={0.5}\r\n                                                            icon={<FavoriteIcon fontSize=\"small\" />}\r\n                                                        />\r\n                                                    </Box>\r\n                                                </TableCell>\r\n\r\n                                                <EditModal\r\n                                                    hike={dbHikes[index]} refresh={refresh}\r\n                                                ></EditModal>\r\n                                                <IconButton>\r\n                                                    <DeleteIcon onClick={(event) => { onDeleteClickHandler(event, index) }}>Delete</DeleteIcon>\r\n                                                </IconButton>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                                        <TableCell colSpan={6} />\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n\r\n                        </Table>\r\n                        <TableFooter\r\n                            style={{\r\n                                fontFamily: 'Lobster',\r\n                                fontSize: '20px'\r\n                            }}\r\n                        >\r\n                            SUMMARY &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Total Hikes: <span style={{ color: 'green', fontSize: 25 }} >{hikes.length}</span> &nbsp;&nbsp;&nbsp;&nbsp; Miles Hiked: <span style={{ color: 'green', fontSize: 25 }} >{hikes.reduce((total, { totalMiles }) => total += parseFloat(totalMiles), 0)} </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Overall Elevation Gained: <span style={{ color: 'green', fontSize: 25 }} >{hikes.reduce((total, { elevationGain }) => total += parseFloat(elevationGain), 0)} </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </TableFooter>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={hikes.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n                <FormControlLabel\r\n                    control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                    label=\"Dense padding\"\r\n                />\r\n                <RLink to=\"/Calendar\"\r\n                    style={{\r\n                        color: \"yellowgreen\"\r\n                    }}>My Calendar!></RLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","//example of function\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {uriBase, api} from '../const'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        // \"background-color\": \"grey\"\r\n      },\r\n      \r\n    },\r\n  }));\r\n\r\n  \r\nexport default function SignUp (props){\r\n    const classes = useStyles();\r\n\r\n    let [message, setMessage] = React.useState(props.initialMessage)\r\n //first is the variable we use, the 2nd is the function to change the variable\r\n //function will be set as an arrow function\r\n    let [fName, setfName] = React.useState(\"\")\r\n    let [lName, setlName] = React.useState(\"\")\r\n    let [userName, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n    \r\n    const onClickHandler = (event) => {\r\n        event.preventDefault()\r\n        let formData = new FormData()\r\n        formData.append(\"fName\", fName)\r\n        formData.append(\"lName\", lName)\r\n        formData.append(\"userName\", userName)\r\n        formData.append(\"password\", password)\r\n            for(var key of formData.entries() ){\r\n                console.log(key[0] + \", \" + key[1])\r\n            }\r\n            \r\n\r\n        fetch(`${uriBase}${api}/users/signup`,{\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then(HttpRequest => {\r\n            if(!HttpRequest.ok){\r\n                throw new Error (\"Sign up Failed\")\r\n            }\r\n                return HttpRequest.json()\r\n        })\r\n        .then(user => {\r\n            //ToDo Handle User\r\n            setMessage(\"Welcome!\")\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        setMessage(\"You are Signed Up!\")\r\n    }\r\n\r\n    const onChangeHandler = (event) => {\r\n        switch (event.target.name) {\r\n            case 'fName':\r\n                setfName(event.target.value)\r\n                break\r\n            case 'lName':\r\n                setlName(event.target.value)  \r\n                break  \r\n            case 'userName':\r\n                setUserName(event.target.value)   \r\n                break\r\n            case 'password':\r\n                setPassword(event.target.value)\r\n                break\r\n\r\n                default: \r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <h1>{message}</h1>\r\n            <form>\r\n            <div>\r\n            First Name<input type= \"text\" placeholder=\"First Name\" onChange={onChangeHandler} name=\"fName\" value={fName}></input><br></br>\r\n            Last Name<input onChange={onChangeHandler} name=\"lName\" value={lName}></input><br></br>\r\n            User Name<input onChange={onChangeHandler} name='userName' value={userName}></input><br></br>\r\n            Password<input onChange={onChangeHandler} name='password' value={password}></input><br></br>\r\n            </div>\r\n            <div>\r\n            <input type='submit' onClick={onClickHandler}></input><br></br>\r\n            </div>\r\n            </form>\r\n            <div>\r\n            <Link to=\"login\">Back to Login </Link><br></br>\r\n            <Link to=\"Tracker\">Track Your Hikes</Link>\r\n            <Link to=\"Calendar\">Calendar</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport startOfWeek from \"date-fns/startOfWeek\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport startOfMonth from \"date-fns/startOfMonth\";\r\nimport endOfMonth from \"date-fns/endOfMonth\";\r\nimport endOfWeek from \"date-fns/endOfWeek\";\r\nimport isSameMonth from \"date-fns/isSameMonth\";\r\nimport isSameDay from \"date-fns/isSameDay\";\r\nimport parse from \"date-fns/parse\";\r\nimport addMonths from \"date-fns/addMonths\";\r\nimport subMonths from \"date-fns/subMonths\"\r\nimport '../components/assets/Calendar.css'\r\nimport { Link as RLink } from 'react-router-dom'\r\nimport { uriBase, api } from '../const'\r\n\r\nconst Calendar = () =>{\r\n    const [currentDate, setCurrentDate] = React.useState(new Date());\r\n    const [selectedDate, setSelectedDate] =React.useState(new Date());\r\n    \r\n\r\n\r\nconst header = () => {\r\n        const dateFormat = \"MMMM yyyy\";\r\n    \r\n    return (\r\n      <div className=\"header row flex-middle\">\r\n        <div className=\"column col-start\">\r\n          <div className=\"icon\" onClick={prevMonth}>\r\n            Prev\r\n          </div>\r\n        </div>\r\n        <div className=\"column col-center\">\r\n          <span>\r\n            {format(currentDate, dateFormat)}\r\n          </span>\r\n        </div>\r\n        <div className=\"column col-end\" onClick={nextMonth}>\r\n          <div className=\"icon\">Next</div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst days=()=> {\r\n    const dateFormat = \"EEEE\";\r\n  const days = [];\r\n  let startDate = startOfWeek(currentDate, 0);\r\n  for (let i = 0; i < 7; i++) {\r\n    days.push(\r\n      <div className=\"column col-center\" key={i}>\r\n        {format(addDays(startDate, i), dateFormat)}\r\n      </div>\r\n    );\r\n  }\r\n  return <div className=\"days row\">{days}</div>;\r\n}\r\nconst nextMonth = () =>{\r\n    setCurrentDate(addMonths(currentDate, 1))\r\n}\r\nconst prevMonth = () =>{\r\n    setCurrentDate(subMonths(currentDate, 1))\r\n}\r\n\r\nconst cells= ()=> {\r\n    \r\n    const monthStart = startOfMonth(currentDate);\r\n    const monthEnd = endOfMonth(monthStart);\r\n    const startDate = startOfWeek(monthStart);\r\n    const endDate = endOfWeek(monthEnd);\r\n    const dateFormat = \"d\";\r\n    const rows = [];\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = \"\";\r\nwhile (day <= endDate) {\r\n  for (let i = 0; i < 7; i++) {\r\n    formattedDate = format(day, dateFormat);\r\n    const cloneDay = day;\r\n    days.push(\r\n      <div\r\n        className={`column cell ${\r\n          !isSameMonth(day, monthStart)\r\n            ? \"disabled\"\r\n            : isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n        }`}\r\n        key={day}\r\n        onClick={() => onDateClick(parse(cloneDay))}\r\n      >\r\n        <span className=\"number\">{formattedDate}</span>\r\n        <span className=\"bg\">{formattedDate}</span>\r\n      </div>\r\n    );\r\n    day = addDays(day, 1);\r\n  }\r\n  rows.push(\r\n    <div className=\"row\" key={day}>\r\n      {days}\r\n    </div>\r\n  );\r\n  days = [];\r\n}\r\nreturn <div className=\"body\">{rows}</div>;\r\n\r\n}\r\n\r\nconst onDateClick = day => {\r\n    setSelectedDate(day)\r\n      };\r\n\r\n\r\n    return (\r\n      <div className = \"calendar\">\r\n        <div>{header()}</div>\r\n        <div>{days()}</div>\r\n        <div>{cells()}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Calendar;","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n// import Tracker from './TrackerForm'\r\nimport MyBlog from './MyBlog'\r\nimport Mainpage from './Mainpage'\r\nimport Chart from './Chart'\r\nimport SignUp from './SignUp'\r\nimport Calendar from './Calendar'\r\n\r\n\r\nexport default function MainRouter(){\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                \r\n                <Switch>\r\n\r\n                <Route path=\"/Tracker\">   \r\n                        <Chart initialMessage=\"Track Your Hikes Here ;)\"></Chart>\r\n                        </Route> \r\n                    <Route path= \"/MyBlog\">\r\n                            <MyBlog></MyBlog>\r\n                        </Route>\r\n                    <Route path= \"/SignUp\">\r\n                            <SignUp></SignUp>\r\n                        </Route>  \r\n                        <Route path= \"/Calendar\">\r\n                            <Calendar></Calendar>\r\n                            </Route>  \r\n                    <Route path=\"/\">\r\n                        <Mainpage initialMessage=\"Welcome Adventurer!\"></Mainpage>\r\n                    </Route> \r\n                       \r\n                </Switch>\r\n                                \r\n            </Router>    \r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport MainRouter from './components/MainRouter'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const uriBase = process.env.NODE_ENV !== 'production' ? (\"http://localhost:3001\") \r\n:\r\n(\"https://crud-hiking-tracker.herokuapp.com\")\r\n// const uriBase = \"https://crud-hiking-tracker.herokuapp.com\"\r\nconst api = \"/api/v1\"\r\n\r\nmodule.exports.uriBase= uriBase\r\nmodule.exports.api = api"],"sourceRoot":""}