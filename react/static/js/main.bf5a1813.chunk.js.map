{"version":3,"sources":["components/MyBlog.js","components/Mainpage.js","components/AddModal.js","components/EditModal.js","components/Chart.js","components/SignUp.js","components/MainRouter.js","App.js","serviceWorker.js","index.js","const.js"],"names":["MyBlog","props","MainPage","makeStyles","theme","button","margin","spacing","state","name","initialMessage","userName","password","loggedIn","onClickHandler","bind","onChangeHandler","body","this","fetch","uriBase","api","method","headers","JSON","stringify","then","httpResponse","ok","Error","json","user","console","log","hasOwnProperty","setState","catch","error","event","target","value","className","onChange","Button","variant","color","startIcon","onClick","to","component","RLink","React","Component","getModalStyle","top","left","transform","useStyles","paper","position","width","backgroundColor","border","boxShadow","shadows","padding","SimpleModal","classes","useState","modalStyle","open","setOpen","hikeDate","setHikeDate","hikeName","setHikeName","totalMiles","setTotalMiles","elevationGain","setElevationGain","peakElevation","setPeakElevation","message","setMessage","Tooltip","title","IconButton","aria-label","Modal","aria-labelledby","aria-describedby","onClose","style","type","preventDefault","formData","FormData","append","HttpRequest","hike","handleClose","update","undefined","Object","entries","length","_id","HttpResponse","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","order","onRequestSort","rowCount","TableHead","TableRow","map","headCell","TableCell","key","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","root","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","primary","dark","flex","fontFamily","footer","EnhancedTableToolbar","Toolbar","Typography","marginBottom","table","minWidth","clip","height","overflow","EnhancedTable","setOrder","setOrderBy","selected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","hikes","setHikes","dbHikes","setdbHikes","emptyRows","Math","min","refresh","response","row","useEffect","Paper","numSelected","TableContainer","Table","size","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","onDeleteClickHandler","colSpan","TableFooter","fontSize","reduce","total","parseFloat","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","checked","SignUp","fName","setfName","lName","setlName","setUserName","setPassword","placeholder","MainRouter","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bf5a1813.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction MyBlog(props) {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyBlog;","//example of function\r\nimport React from 'react'\r\nimport './Mainpage.css'\r\nimport {Link as RLink} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {uriBase, api} from '../const';\r\nimport Icon from '@material-ui/core/Icon'\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nexport default class MainPage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: props.initialMessage,\r\n            userName: \"\",\r\n            password: \"\",\r\n            loggedIn: \"The mountains are calling and I must go!\"\r\n        }\r\n        this.onClickHandler = this.onClickHandler.bind(this)\r\n        this.onChangeHandler = this.onChangeHandler.bind(this)\r\n\r\n    }//end of constructor function\r\n    \r\n\r\n\r\n    onClickHandler(){\r\n        let body = {\r\n            userName: this.state.userName,\r\n            password: this.state.password\r\n        }\r\n        fetch(`${uriBase}${api}/users/login`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)          \r\n        })\r\n        .then(httpResponse => {\r\n            if (!httpResponse.ok){\r\n            throw new Error(\"Couldn't Send Login\")\r\n        }\r\n            return httpResponse.json()\r\n        })\r\n        .then(user => {\r\n            console.log(\"user\")\r\n            if (user.hasOwnProperty(\"fName\")){\r\n                this.setState({loggedIn: \"Woohoo its go time!\"})\r\n            } else {\r\n                this.setState({loggedIn: \"Are you lost?\"})\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    onChangeHandler(event){\r\n        this.setState({[event.target.name]: event.target.value})\r\n        console.log(this.state)\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div>\r\n                <div>\r\n                <h1>{this.state.name}</h1>\r\n                <h2>{this.state.loggedIn}</h2>\r\n                <div className=\"signin\">\r\n                User Name<input onChange={this.onChangeHandler} name=\"userName\" value={this.state.userName}></input><br></br>\r\n                Password<input onChange={this.onChangeHandler} name=\"password\" value={this.state.password}></input><br></br>\r\n                </div>\r\n                </div>\r\n                <div>\r\n                <Button \r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                startIcon={<CheckIcon />}\r\n                onClick={this.onClickHandler} >Log In</Button>\r\n                <Button \r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                startIcon={<EmojiEmotionsIcon />}\r\n                to=\"/signup\"\r\n                component={RLink}\r\n                 >Sign Up</Button>\r\n                <br></br>\r\n                <RLink to=\"/Tracker\">Track Your Hikes Here!</RLink><br></br>\r\n                <RLink to=\"/MyBlog\">My Summit Blog!</RLink>\r\n                \r\n                </div>\r\n            </div>\r\n            //can do onclick as an arrow function however with the this you dont have to call and define it everytime\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport {uriBase,api} from '../const'\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 ;\r\n  const left = 50 ;\r\n  \r\n    \r\n  \r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    backgroundColor: 'black',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n   const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [hikeDate, setHikeDate] = React.useState(\"\");\r\n  const [hikeName, setHikeName] = React.useState(\"\");\r\n  const [totalMiles, setTotalMiles] = React.useState(\"\");\r\n  const [elevationGain, setElevationGain] = React.useState(\"\");\r\n  const [peakElevation, setPeakElevation] = React.useState(\"\");\r\n    const [message, setMessage] = React.useState(\"\");\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    switch (event.target.name) {\r\n        case 'hikeDate':\r\n            setHikeDate(event.target.value)\r\n            break\r\n        case 'hikeName':\r\n            setHikeName(event.target.value)  \r\n            break  \r\n        case 'totalMiles':\r\n            setTotalMiles(event.target.value)   \r\n            break\r\n        case 'elevationGain':\r\n            setElevationGain(event.target.value)\r\n            break\r\n        case 'peakElevation':\r\n            setPeakElevation(event.target.value)    \r\n            break\r\n            default: \r\n    }\r\n}\r\n\r\nconst onSaveHandler = (event) => {\r\n    event.preventDefault()\r\n    let formData = new FormData()\r\n    formData.append(\"hikeDate\", hikeDate)\r\n    formData.append(\"hikeName\", hikeName)\r\n    formData.append(\"totalMiles\", totalMiles)\r\n    formData.append(\"elevationGain\", elevationGain)\r\n    formData.append(\"peakElevation\", peakElevation)\r\n      \r\n        fetch(`${uriBase}${api}/hikes`,{\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then(HttpRequest => {\r\n            if(!HttpRequest.ok){\r\n                throw new Error (\"Add Hike Failed\")\r\n            }\r\n                return HttpRequest.json()\r\n        })\r\n        .then(hike => {\r\n            //ToDo Handle User\r\n            setMessage(\"Hike Added!\")\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        setMessage(\"Hike Added!\")\r\n    }\r\n\r\n  const onCancelHandler = () => {\r\n    \r\n    setHikeDate(\"\")\r\n    setHikeName(\"\")\r\n    setTotalMiles(\"\")\r\n    setElevationGain(\"\")\r\n    setPeakElevation(\"\")\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Tooltip title=\"Add new hike\">\r\n            \r\n            <IconButton aria-label=\"Add new hike\"  onClick={handleOpen}>\r\n              <AddCircleIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h1>Enter your hike information here!</h1>\r\n          <form>\r\n            <div>\r\n            Hike Date<input type= \"date\" onChange={onChangeHandler} name=\"hikeDate\" value={hikeDate}></input><br></br>\r\n            Trail Name<input type= \"text\" onChange={onChangeHandler} name=\"hikeName\" value={hikeName}></input><br></br>\r\n            Total Miles<input type= \"number\"onChange={onChangeHandler} name='totalMiles' value={totalMiles}></input><br></br>\r\n            Elevation Gain<input type=\"number\"onChange={onChangeHandler} name='elevationGain' value={elevationGain}></input><br></br>\r\n            Peak Elevation<input type=\"number\"onChange={onChangeHandler} name='peakElevation' value={peakElevation}></input><br></br>\r\n            </div>\r\n            <div>\r\n            <button onClick={onSaveHandler}>Save</button><br></br>\r\n            <button onClick={onCancelHandler}>Close</button>\r\n            <h4>{message}</h4>\r\n            </div>\r\n            </form>\r\n            \r\n          <SimpleModal />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { uriBase, api } from '../const'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport objectId from 'bson-objectid'\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 500,\r\n        backgroundColor: 'black',\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function SimpleModal(props) {\r\n    const classes = useStyles();\r\n    // console.log(props.hike)\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n        \r\n    const [hikeDate, setHikeDate] = React.useState(\"\");\r\n    const [hikeName, setHikeName] = React.useState(\"\");\r\n    const [totalMiles, setTotalMiles] = React.useState(\"\");\r\n    const [elevationGain, setElevationGain] = React.useState(\"\");\r\n    const [peakElevation, setPeakElevation] = React.useState(\"\");\r\n    \r\n    const [message, setMessage] = React.useState(\"\");    \r\n\r\n    const onChangeHandler = (event) => {\r\n        switch (event.target.name) {\r\n            case 'hikeDate':\r\n                setHikeDate(event.target.value)\r\n                break\r\n            case 'hikeName':\r\n                setHikeName(event.target.value)  \r\n                break  \r\n            case 'totalMiles':\r\n                setTotalMiles(event.target.value)   \r\n                break\r\n            case 'elevationGain':\r\n                setElevationGain(event.target.value)\r\n                break\r\n            case 'peakElevation':\r\n                setPeakElevation(event.target.value)    \r\n                break\r\n                default: \r\n        }\r\n    }\r\n    \r\n  \r\n\r\n    const onSaveHandler = () => {\r\n        // const id = dbHikes[index]._id\r\n        let update = {}\r\n        \r\n       \r\n\r\n       \r\n            // we are editing, patching\r\n\r\n            if (props.hike.hikeDate !== hikeDate || props.hike.hikeDate === undefined) {\r\n                update.hikeDate = hikeDate\r\n            }\r\n            if (props.hike.hikeName !== hikeName || props.hike.hikeName === undefined) {\r\n                update.hikeName = hikeName\r\n            }\r\n            if (props.hike.totalMiles !== totalMiles || props.hike.totalMiles === undefined) {\r\n                update.totalMiles = totalMiles\r\n            }\r\n            if (props.hike.elevationGain !== elevationGain || props.hike.elevationGain === undefined) {\r\n                update.elevationGain = elevationGain\r\n            }\r\n            if (props.hike.peakElevation !== peakElevation || props.hike.peakElevation === undefined) {\r\n                update.peakElevation = peakElevation\r\n            }\r\n\r\n        \r\n\r\n        \r\n        //make sure we do not update a blank object\r\n        if (Object.entries(update).length > 0) {\r\n            //patch or put\r\n            fetch(`${uriBase}${api}/hikes/${props.hike._id}`, {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(update)\r\n            })\r\n                .then(HttpResponse => {\r\n                    if (!HttpResponse.ok) {\r\n                        throw new Error(`Coudn't Patch`)\r\n                    }\r\n                    return HttpResponse.json()\r\n                })\r\n                .then(user => {\r\n                    handleClose()\r\n                    // props.refresh()\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n        // let hike = dbhikes[index]\r\n       \r\n        // setHikeDate(hike.hikeDate)\r\n        // setHikeName(hike.hikeName)\r\n        // setTotalElevation(hike.totalElevation)\r\n        // setElevationGain(hike.elevationGain)\r\n        // setPeakElevation(hike.peakElevation)\r\n\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        \r\n    };\r\n\r\n  \r\n  \r\n\r\n    return (\r\n        <div>\r\n            <IconButton>\r\n                <EditIcon onClick={handleOpen}>Edit</EditIcon>\r\n            </IconButton>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h1>Edit your hike!</h1>\r\n                    <div>\r\n                        Hike Date<input type=\"text\" onChange={onChangeHandler} name=\"hikeDate\" value={hikeDate}></input><br></br>\r\n                        Trail Name<input type=\"text\" onChange={onChangeHandler} name=\"hikeName\" value={hikeName}></input><br></br>\r\n                        Total Miles<input type=\"number\" onChange={onChangeHandler} name='totalMiles' value={totalMiles}></input><br></br>\r\n                        Elevation Gain<input type=\"number\" onChange={onChangeHandler} name='elevationGain' value={elevationGain}></input><br></br>\r\n                        Peak Elevation<input type=\"number\" onChange={onChangeHandler} name='peakElevation' value={peakElevation}></input><br></br>\r\n\r\n                    </div>\r\n\r\n                    <div style={{color: 'red'}}>\r\n                        <button onClick={onSaveHandler}>Save</button><br></br>\r\n                        <button onClick={handleClose}>Cancel</button>\r\n                        <h4>{message}</h4>\r\n                    </div>\r\n\r\n\r\n                    <SimpleModal />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddModal from './AddModal'\r\nimport EditModal from './EditModal'\r\nimport { uriBase, api } from '../const'\r\nimport './Mainpage.css'\r\nimport { Link as RLink } from 'react-router-dom'\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport Moment from 'moment'\r\n\r\nfunction createData(hikeDate, hikeName, totalMiles, elevationGain, peakElevation) {\r\n    return { hikeDate, hikeName, totalMiles, elevationGain, peakElevation };\r\n}\r\n\r\n\r\n// const rows = [\r\n//   createData('January 10, 2020','Mulans Peak', 4.7, 2000, 8800,),\r\n//   createData('April 17, 2019', 'Granduer Peak', 6.5, 4000, 9700),\r\n//   createData('May 23, 2019', 'Elephant Rock', 8, 1700, 8100),\r\n\r\n// ];\r\n\r\n\r\nfunction db2tablerows(dbArray) {\r\n    return (dbArray.map((row) => {\r\n        return ({\r\n            hikeDate: row.hikeDate,\r\n            hikeName: row.hikeName,\r\n            totalMiles: row.totalMiles,\r\n            elevationGain: row.elevationGain,\r\n            peakElevation: row.peakElevation\r\n        })\r\n    })\r\n    )\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'hikeDate', numeric: true, disablePadding: false, label: 'Date' },\r\n    { id: 'hikeName', numeric: true, disablePadding: false, label: 'Trail Name' },\r\n    { id: 'totalMiles', numeric: true, disablePadding: false, label: 'Total Miles' },\r\n    { id: 'elevationGain', numeric: true, disablePadding: false, label: 'Elevation Gained' },\r\n    { id: 'peakElevation', numeric: true, disablePadding: false, label: 'Peak Elevation' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, rowCount, onRequestSort } = props;\r\n    const createSortHandler = property => event => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <TableHead className=\"table\">\r\n            <TableRow>\r\n                {/* <TableCell padding=\"checkbox\">      \r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all hikes' }}\r\n          />\r\n        </TableCell> */}\r\n                {headCells.map(headCell => (\r\n                    <TableCell\r\n\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n\r\n    onRequestSort: PropTypes.func.isRequired,\r\n\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n        fontFamily: 'Lobster'\r\n    },\r\n    footer: {\r\n        fontFamily: 'Lobster',\r\n       \r\n    }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n    const classes = useToolbarStyles();\r\n    return (\r\n        <Toolbar>\r\n\r\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\"\r\n                fontFamily='Lobster'>\r\n                Hike Tracker\r\n        </Typography>\r\n\r\n            <AddModal ></AddModal>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function EnhancedTable() {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('miles');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [hikes, setHikes] = React.useState([]);\r\n    const [dbHikes, setdbHikes] = React.useState([])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = event => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, hikes.length - page * rowsPerPage);\r\n\r\n    const onDeleteClickHandler = (event, index) => {\r\n        const id = dbHikes[index]._id\r\n        fetch(`${uriBase}${api}/hikes/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(HttpResponse => {\r\n                if (!HttpResponse.ok) {\r\n                    throw new Error(\"Delete Failed\")\r\n                }\r\n                return HttpResponse.json()\r\n            })\r\n            .then(response => {\r\n                refresh()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const refresh = () => {\r\n\r\n        fetch(`${uriBase}${api}/hikes`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(HttpResponse => {\r\n                if (!HttpResponse.ok) {\r\n                    throw new Error(\"Bad Response\")\r\n                }\r\n                return HttpResponse.json()\r\n            })\r\n            .then(response => {\r\n                console.log(response)\r\n                setdbHikes(response)\r\n                setHikes(db2tablerows(response))\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    React.useEffect(() => {\r\n        refresh()\r\n    }, [])\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <h1>The VIEW <br></br>is always worth <br></br>the CLIMB!!</h1>\r\n\r\n            <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} />\r\n                    <TableContainer>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={dense ? 'small' : 'medium'}\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <EnhancedTableHead\r\n                                classes={classes}\r\n                                numSelected={selected.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                //   onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={hikes.length}\r\n             \r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(hikes, getComparator(order, orderBy))\r\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    .map((row, index) => {\r\n                                        //   const isItemSelected = isSelected(row.hikeDate);\r\n                                        //   const labelId = `enhanced-table-checkbox-${index}`;\r\n                                        console.log(index)\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                                //   hover\r\n                                                //   onClick={event => handleClick(event, row.hikeDate)}\r\n                                                //   role=\"checkbox\"\r\n                                                //   aria-checked={isItemSelected}\r\n                                                //   tabIndex={-1}\r\n                                                key={index}\r\n                                            //   selected={isItemSelected}\r\n                                            >\r\n                                                {/* <TableCell > */}\r\n                                                {/* <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        /> */}\r\n                                                {/* </TableCell> */}\r\n                                                {/* <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.hikeDate}\r\n                      </TableCell> */}\r\n                \r\n                                                <TableCell align=\"left\">{row.hikeDate}</TableCell>\r\n                                                <TableCell align=\"right\">{row.hikeName}</TableCell>\r\n                                                <TableCell align=\"right\">{row.totalMiles}</TableCell>\r\n                                                <TableCell align=\"right\">{row.elevationGain}</TableCell>\r\n                                                <TableCell align=\"right\">{row.peakElevation}</TableCell>\r\n                                                <EditModal\r\n                                                    hike={dbHikes[index]} refresh={refresh}\r\n                                                ></EditModal>\r\n                                                <IconButton>\r\n                                                    <DeleteIcon onClick={(event) => { onDeleteClickHandler(event, index) }}>Delete</DeleteIcon>\r\n                                                </IconButton>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                                        <TableCell colSpan={6} />\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                            \r\n                        </Table>\r\n                        <TableFooter \r\n                        style={{\r\n                            fontFamily: 'Lobster',\r\n                            fontSize: '20px'\r\n                    }}\r\n                        >\r\n                                    SUMMARY &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Total Hikes: <span style={{color:'green', fontSize:25}} >{hikes.length}</span> &nbsp;&nbsp;&nbsp;&nbsp; Miles Hiked: <span style={{color:'green', fontSize:25}} >{hikes.reduce((total, { totalMiles }) => total += parseFloat(totalMiles), 0)} </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Overall Elevation Gained: <span style={{color:'green', fontSize:25}} >{hikes.reduce((total, { elevationGain }) => total += parseFloat(elevationGain), 0)} </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \r\n                            </TableFooter>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={hikes.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n                <FormControlLabel\r\n                    control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                    label=\"Dense padding\"\r\n                />\r\n                <RLink to=\"/MyBlog\"\r\n                    style={{\r\n                        color: \"yellowgreen\"\r\n                    }}>My Summit Blog!></RLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","//example of function\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {uriBase, api} from '../const'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        // \"background-color\": \"grey\"\r\n      },\r\n      \r\n    },\r\n  }));\r\n\r\n  \r\nexport default function SignUp (props){\r\n    const classes = useStyles();\r\n\r\n    let [message, setMessage] = React.useState(props.initialMessage)\r\n //first is the variable we use, the 2nd is the function to change the variable\r\n //function will be set as an arrow function\r\n    let [fName, setfName] = React.useState(\"\")\r\n    let [lName, setlName] = React.useState(\"\")\r\n    let [userName, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n    \r\n    const onClickHandler = (event) => {\r\n        event.preventDefault()\r\n        let formData = new FormData()\r\n        formData.append(\"fName\", fName)\r\n        formData.append(\"lName\", lName)\r\n        formData.append(\"userName\", userName)\r\n        formData.append(\"password\", password)\r\n            for(var key of formData.entries() ){\r\n                console.log(key[0] + \", \" + key[1])\r\n            }\r\n            \r\n\r\n        fetch(`${uriBase}${api}/users/signup`,{\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n        .then(HttpRequest => {\r\n            if(!HttpRequest.ok){\r\n                throw new Error (\"Sign up Failed\")\r\n            }\r\n                return HttpRequest.json()\r\n        })\r\n        .then(user => {\r\n            //ToDo Handle User\r\n            setMessage(\"Welcome!\")\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        setMessage(\"You are Signed Up!\")\r\n    }\r\n\r\n    const onChangeHandler = (event) => {\r\n        switch (event.target.name) {\r\n            case 'fName':\r\n                setfName(event.target.value)\r\n                break\r\n            case 'lName':\r\n                setlName(event.target.value)  \r\n                break  \r\n            case 'userName':\r\n                setUserName(event.target.value)   \r\n                break\r\n            case 'password':\r\n                setPassword(event.target.value)\r\n                break\r\n\r\n                default: \r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <h1>{message}</h1>\r\n            <form>\r\n            <div>\r\n            First Name<input type= \"text\" placeholder=\"First Name\" onChange={onChangeHandler} name=\"fName\" value={fName}></input><br></br>\r\n            Last Name<input onChange={onChangeHandler} name=\"lName\" value={lName}></input><br></br>\r\n            User Name<input onChange={onChangeHandler} name='userName' value={userName}></input><br></br>\r\n            Password<input onChange={onChangeHandler} name='password' value={password}></input><br></br>\r\n            </div>\r\n            <div>\r\n            <input type='submit' onClick={onClickHandler}></input><br></br>\r\n            </div>\r\n            </form>\r\n            <div>\r\n            <Link to=\"login\">Back to Login </Link><br></br>\r\n            <Link to=\"Tracker\">Track Your Hikes</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n// import Tracker from './TrackerForm'\r\nimport MyBlog from './MyBlog'\r\nimport Mainpage from './Mainpage'\r\nimport Chart from './Chart'\r\nimport SignUp from './SignUp'\r\n\r\nexport default function MainRouter(){\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                \r\n                <Switch>\r\n\r\n                <Route path=\"/Tracker\">   \r\n                        <Chart initialMessage=\"Track Your Hikes Here ;)\"></Chart>\r\n                        </Route> \r\n                    <Route path= \"/MyBlog\">\r\n                            <MyBlog></MyBlog>\r\n                        </Route>\r\n                    <Route path= \"/SignUp\">\r\n                            <SignUp></SignUp>\r\n                        </Route>    \r\n                    <Route path=\"/\">\r\n                        <Mainpage initialMessage=\"Welcome Adventurer!\"></Mainpage>\r\n                    </Route> \r\n                       \r\n                </Switch>\r\n                                \r\n            </Router>    \r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport MainRouter from './components/MainRouter'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// const uriBase = \"http://localhost:3001\"\r\nconst uriBase = \"https://crud-hiking-tracker.herokuapp.com\"\r\nconst api = \"/api/v1\"\r\n\r\nmodule.exports.uriBase= uriBase\r\nmodule.exports.api = api"],"sourceRoot":""}